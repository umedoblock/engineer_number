# EngineerNumber
# Copyright (C) 2013-2017 梅濁酒(umedoblock)
# 梅濁酒(umedoblock) umedoblock@gmail.com, 2013-2017
#
msgid ""
msgstr ""
"Project-Id-Version: 1.0.5\n"
"POT-Creation-Date: 2013-02-17 08:02+JST\n"
"PO-Revision-Date: 2017-11-03 11:35+0900\n"
"Last-Translator: 梅濁酒(umedoblock) umedoblock@gmail.com\n"
"Language-Team: Japanese umedoblock@gmail.com\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: pygettext.py 1.5\n"

#, docstring
msgid ""
"attr.__doc__ を gettext() にて翻訳する。\n"
"\n"
"    attr() として attr を呼び出し可能であれば、\n"
"    attr に結び付く __doc__ 属性を msgid とし、\n"
"    以下を実行する。\n"
"    msgstr = gettext(msgid)\n"
"    実行後、attr に結びつく __doc__ 属性の値を、msgstr で上書きする。\n"
"\n"
"    attr() として attr を呼び出し可能でない場合、何も実行しない。\n"
"    "
msgstr ""

#, docstring
msgid ""
"新しい EngineerNumber object を作ります。\n"
"    EngineerNumber object の精度は，Python3 の float object に依存します。\n"
"    Python3 では float object を C 言語の double 型の変数(=ob_fval) として定義\n"
"    しています。よって， EngineerNumber object の精度は，C 言語の double 型に\n"
"    依存します。\n"
"\n"
"    'value' は，浮動小数点数，整数，文字列，または他の EngineerNumber object\n"
"    を引数に出来ます。何らの値も与えられなければ， EngineerNumber('0') を返し\n"
"    ます。\n"
"    'exponent10' が引数と出来るのは整数のみです。\n"
"\n"
"    value * 10 ** exponent10\n"
"    の計算結果を EngineerNumber object の値とします。\n"
"    "
msgstr ""
"Construct a new EngineerNumber object.\n"
"    EngineerNumber accuracy depends on Python3 float object accuracy. Python3 define float object as C language double type variant(=ob_fval). Therefore EngineerNumber object accuracy depends on C language double type variant.\n"
"    'value' can be a float, integer, string or another EngineerNumber object. If no value is given, return EngineerNumber('0').\n"
"    The 'exponent10' describe multiplying factor of 10. It can take just integer as argument.\n"
"    \n"
"    Return below result as EngineerNumber object.\n"
"    value * 10 ** exponent10\n"

#, docstring
msgid "有効数字の数値と 10 の乗数値を、tuple に詰めて返します。"
msgstr "significant digit and ten multiplier in tuple."

msgid ""
"\"K\" を SI 接頭辞の記号として使用することは出来ません。\n"
"kilo を表現したい場合、 \"K\" ではなく、小文字の \"k\" をお使い下さい。\n"
"なぜならば、\"K\" は、Kelvin 温度を表現するための単位記号だからです。"
msgstr ""
"cannot accept \"K\" as SI prefix symbol. "
"please use \"k\" as prefix if you hope to describe kilo."
"Because \"K\" means Kelbin celcius.')"

#, docstring
msgid "SI 接頭辞に対応する、10 の乗数値を返します。"
msgstr "return ten multiplier value injective SI prefix."

msgid "SI 接頭辞の記号は、次のいずれかでなければなりません。{}"
msgstr "SI prefix symbol must be in {}."

#, docstring
msgid ""
"有効数値と 10 の乗数値を指定します。\n"
"        value を、二つの方法により指定できます。\n"
"        一つ目は、有効数値を整数値、浮動小数値として指定する方法です。\n"
"        二つ目は、有効数値の文字列と SI 接頭辞を連結し、文字列として\n"
"        指定する方法です。\n"
"        exponent10 は、無指定であれば、0 として取り扱います。\n"
"\n"
"        以下の計算式により、value, exponent10 の値から、\n"
"        EngineerNumber.num 属性の値を計算します。\n"
"        num = value * 10 ** exponent10\n"
"        "
msgstr "assign significant digits and ten multiplier.\n"
"        value is assigned by two ways.\n"
"        first way, significant digits as integer or float.\n"
"        second way, join significant digits string and SI prefix like a\n"
"        as string\n"
"        exponent10 default is zero.\n"
"\n"
"        calculate EngineerNumber.num attribute value to use a below\n"
"        calculating formula.\n"
"        num = value * 10 ** exponent10\n"
"        "

#, docstring
msgid "self[si_prefix] として、SI 接頭辞変換を行う。"
msgstr "convert SI prefix as self[si_prefix]."

#, docstring
msgid "SI 接頭辞により有効数字を変換。"
msgstr "convert significant digits through SI prefix."

#, docstring
msgid ""
"EngineerNumber.num の値から、_num, _exponent10 を正規化する。\n"
"        num, _num, _exponent10 の計算方法は、簡単に以下の通り。\n"
"\n"
"        _exponent10 = log10(num) // group_of_digits(=3)\n"
"        _num = num // (10 ** _exponent10)\n"
"        num =(大体同じ、approximately equal to) _num * 10 ** _exponent10\n"
"\n"
"        _exponent10 は SI 接頭辞と連動するため、\n"
"        group_of_digits(=3) の整数倍になっていることに注意。"
msgstr ""
"normalize _num, _exponent10 from EngineerNumber.num."
"        Instantly show you below how to calculate num, _num, _exponent10.\n"
"\n"
"        _exponent10 = log10(num) // group_of_digits(=3)\n"
"        _num = num // (10 ** _exponent10)\n"
"        num =(approximately equal to) _num * 10 ** _exponent10\n"
"\n"
"        Pay attention to _exponent10.\n"
"        _exponent10 is three-fold to associated with SI prerix.\n"
"        "

#, docstring
msgid "math.sqrt() の help を読んで。"
msgstr "please see math.sqrt() help."

#, docstring
msgid ""
"主に debug 用。\n"
"        github への移行を期に，非公開とした。"
msgstr "mainly-purpose is debug."
"        self._detail() became unpublish to move github.\n"
"        "

#, docstring
msgid "object.__add__() の help を読んで。"
msgstr "please see object.__add__() help."

#, docstring
msgid "object.__sub__() の help を読んで。"
msgstr "please see object.__sub__() help."

#, docstring
msgid "object.__mul__() の help を読んで。"
msgstr "please see object.__mul__() help."

#, docstring
msgid "object.__floordiv__() の help を読んで。"
msgstr "please see object.__floordiv__() help."

#, docstring
msgid "object.__truediv__() の help を読んで。"
msgstr "please see object.__truediv__() help."

#, docstring
msgid "object.__mod__() の help を読んで。"
msgstr "please see object.__mod__() help."

#, docstring
msgid "object.__divmod__() の help を読んで。"
msgstr "please see object.__divmod__() help."

#, docstring
msgid "object.__pow__() の help を読んで。"
msgstr "please see object.__pow__() help."

#, docstring
msgid "object.__int__() の help を読んで。"
msgstr "please see object.__int__() help."

msgid "0 < abs(number(={})) < 1 を満たす数字を int に変換しようとしました。"
msgstr "trying to convert Integer that satisfied 0 < abs(number(={})) < 1."

#, docstring
msgid "object.__float__() の help を読んで。"
msgstr "please see object.__float__() help."

#, docstring
msgid "object.__radd__() の help を読んで。"
msgstr "please see object.__radd__() help."

#, docstring
msgid "object.__rsub__() の help を読んで。"
msgstr "please see object.__rsub__() help."

#, docstring
msgid "object.__rmul__() の help を読んで。"
msgstr "please see object.__rmul__() help."

#, docstring
msgid "object.__rfloordiv__() の help を読んで。"
msgstr "please see object.__rfloordiv__() help."

#, docstring
msgid "object.__rtruediv__() の help を読んで。"
msgstr "please see object.__rtruediv__() help."

#, docstring
msgid "object.__rmod__() の help を読んで。"
msgstr "please see object.__rmod__() help."

#, docstring
msgid "object.__rdivmod__() の help を読んで。"
msgstr "please see object.__rdivmod__() help."

#, docstring
msgid "object.__rpow__() の help を読んで。"
msgstr "please see object.__rpow__() help."

#, docstring
msgid "object.__eq__() の help を読んで。"
msgstr "please see object.__eq__() help."

#, docstring
msgid "object.__ne__() の help を読んで。"
msgstr "please see object.__ne__() help."

#, docstring
msgid "object.__gt__() の help を読んで。"
msgstr "please see object.__gt__() help."

#, docstring
msgid "object.__ge__() の help を読んで。"
msgstr "please see object.__ge__() help."

#, docstring
msgid "object.__lt__() の help を読んで。"
msgstr "please see object.__lt__() help."

#, docstring
msgid "object.__le__() の help を読んで。"
msgstr "please see object.__le__() help."

#, docstring
msgid "object.__repr__() の help を読んで。"
msgstr "please see object.__repr__() help."

#, docstring
msgid "object.__str__() の help を読んで。"
msgstr "please see object.__str__() help."

#, docstring
msgid "object.__abs__() の help を読んで。"
msgstr "please see object.__abs__() help."

#, docstring
msgid "object.__pos__() の help を読んで。"
msgstr "please see object.__pos__() help."

#, docstring
msgid "object.__neg__() の help を読んで。"
msgstr "please see object.__neg__() help."

#, docstring
msgid "object.__round__() の help を読んで。"
msgstr "please see object.__round__() help."

#, docstring
msgid "math.__ceil__() の help を読んで。"
msgstr "please see math.__ceil__() help."

#, docstring
msgid "math.floor() の help を読んで。"
msgstr "please see math.floor() help."

#, docstring
msgid "math.trunc() の help を読んで。"
msgstr "please see math.trunc() help."

msgid "look for optimized Hz."
msgstr "look for optimized Hz."

